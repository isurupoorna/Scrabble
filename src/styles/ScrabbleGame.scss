// Professional Scrabble Game Layout
// Main game container with responsive design

.scrabble-game {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--spacing-lg);
  background: var(--bg-primary);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  position: relative;
  animation: fadeIn 0.5s ease;
  
  // Wood grain background pattern
  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 20% 30%, rgba(139, 69, 19, 0.02) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, rgba(160, 82, 45, 0.03) 0%, transparent 50%),
      linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
    z-index: -1;
    pointer-events: none;
  }
}

// Connection status indicator
.connection-status {
  position: fixed;
  top: var(--spacing-md);
  right: var(--spacing-md);
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  background: white;
  border-radius: var(--radius-full);
  box-shadow: var(--shadow-md);
  z-index: var(--z-sticky);
  font-size: var(--font-size-xs);
  font-weight: 500;
  transition: all var(--transition-base);
  
  .status-icon {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    animation: pulse 2s ease-in-out infinite;
  }
  
  &.connected {
    .status-icon {
      background: var(--success);
    }
    .status-text {
      color: var(--success);
    }
  }
  
  &.connecting {
    .status-icon {
      background: var(--warning);
      animation: spin 1s linear infinite;
    }
    .status-text {
      color: var(--warning);
    }
  }
  
  &.disconnected {
    .status-icon {
      background: var(--error);
    }
    .status-text {
      color: var(--error);
    }
  }
}

// Message display (errors and warnings)
.message-display {
  position: fixed;
  top: 80px;
  left: 50%;
  transform: translateX(-50%);
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-lg);
  font-weight: 500;
  z-index: var(--z-modal);
  animation: slideDown 0.3s ease-out;
  max-width: 90vw;
  min-width: 300px;
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  box-shadow: var(--shadow-lg);
  
  &.error {
    background: var(--error);
    color: white;
  }

  &.warning {
    background: #fff3cd;
    color: #856404;
    border: 1px solid #ffeaa7;
  }

  .message-icon {
    font-size: var(--font-size-lg);
    flex-shrink: 0;
  }

  .message-text {
    flex: 1;
    line-height: 1.4;
  }

  .message-close {
    background: none;
    border: none;
    font-size: var(--font-size-xl);
    cursor: pointer;
    padding: 0;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.7;
    transition: opacity var(--transition-fast);
    color: inherit;
    border-radius: 50%;

    &:hover {
      opacity: 1;
      background: rgba(0, 0, 0, 0.1);
    }
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateX(-50%) translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }
}

// Main game layout
.game-content {
  display: grid;
  grid-template-areas: 
    "board sidebar"
    "rack rack";
  grid-template-columns: 1fr 350px;
  grid-template-rows: 1fr auto;
  gap: var(--spacing-xl);
  align-items: start;
  height: 100%;
  
  @media (max-width: 1200px) {
    grid-template-columns: 1fr 300px;
    gap: var(--spacing-lg);
  }
  
  @media (max-width: 968px) {
    grid-template-areas: 
      "board"
      "sidebar"
      "rack";
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto;
    gap: var(--spacing-md);
  }
}

.game-left {
  grid-area: board;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-lg);
  min-width: 0; // Prevent grid overflow
}

.game-right {
  grid-area: sidebar;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  min-width: 0;
}

.game-bottom {
  grid-area: rack;
  display: flex;
  justify-content: center;
  width: 100%;
}

// Game controls
.game-controls {
  display: flex;
  gap: var(--spacing-md);
  flex-wrap: wrap;
  justify-content: center;
  padding: var(--spacing-md);
  background: white;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  
  .btn {
    flex: 1;
    min-width: 120px;
    white-space: nowrap;
    
    @media (max-width: 768px) {
      min-width: 100px;
      padding: var(--spacing-xs) var(--spacing-sm);
      font-size: var(--font-size-xs);
    }
  }
  
  @media (max-width: 480px) {
    flex-direction: column;
    
    .btn {
      min-width: auto;
      width: 100%;
    }
  }
}

// Waiting screen
.waiting-for-game {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  text-align: center;
  background: white;
  border-radius: var(--radius-xl);
  padding: var(--spacing-2xl);
  box-shadow: var(--shadow-lg);
  animation: slideIn 0.5s ease;
  
  h2 {
    color: var(--primary-color);
    margin-bottom: var(--spacing-xl);
    font-family: var(--font-family-secondary);
  }
  
  .spinner {
    width: 60px;
    height: 60px;
    border: 4px solid var(--bg-secondary);
    border-top: 4px solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-top: var(--spacing-lg);
  }
}

// Game board container enhancements
.game-board-container {
  background: white;
  border-radius: var(--radius-xl);
  padding: var(--spacing-xl);
  box-shadow: 
    var(--shadow-lg),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  position: relative;
  
  // Enhanced wood grain effect
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 100px,
        rgba(139, 69, 19, 0.02) 100px,
        rgba(139, 69, 19, 0.02) 102px
      ),
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 100px,
        rgba(160, 82, 45, 0.02) 100px,
        rgba(160, 82, 45, 0.02) 102px
      );
    border-radius: var(--radius-xl);
    pointer-events: none;
    z-index: 0;
  }
  
  // Content above wood grain
  > * {
    position: relative;
    z-index: 1;
  }
}

// Enhanced responsive design
@media (max-width: 1024px) {
  .scrabble-game {
    padding: var(--spacing-md);
    gap: var(--spacing-md);
  }
  
  .game-content {
    grid-template-columns: 1fr 280px;
  }
}

@media (max-width: 768px) {
  .scrabble-game {
    padding: var(--spacing-sm);
    gap: var(--spacing-sm);
  }
  
  .connection-status {
    position: relative;
    top: auto;
    right: auto;
    margin-bottom: var(--spacing-sm);
    align-self: flex-end;
  }
  
  .game-board-container {
    padding: var(--spacing-md);
    margin: 0 auto;
    max-width: 100%;
    overflow-x: auto;
  }
}

@media (max-width: 480px) {
  .scrabble-game {
    padding: var(--spacing-xs);
    min-height: 100vh;
  }
  
  .waiting-for-game {
    padding: var(--spacing-lg);
    margin: var(--spacing-sm);
  }
  
  .error-message {
    margin: var(--spacing-md);
    padding: var(--spacing-sm) var(--spacing-md);
    font-size: var(--font-size-sm);
  }
}

// Loading and transition states
.game-content {
  opacity: 0;
  animation: fadeIn 0.5s ease forwards;
  animation-delay: 0.2s;
}

// Focus management for accessibility
.scrabble-game {
  &:focus-within {
    .game-board-container {
      box-shadow: 
        var(--shadow-lg),
        0 0 0 3px rgba(218, 165, 32, 0.2);
    }
  }
}

// Print styles
@media print {
  .scrabble-game {
    background: white;
    
    &::before {
      display: none;
    }
  }
  
  .connection-status,
  .error-message {
    display: none;
  }
  
  .game-controls {
    display: none;
  }
}

.scrabble-game {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  animation: fadeIn 0.5s ease;
}

.connection-status {
  position: fixed;
  top: var(--spacing-md);
  right: var(--spacing-md);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-md);
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  font-size: var(--font-size-sm);
  font-weight: 500;
  z-index: var(--z-elevated);
  transition: all var(--transition-normal);
  
  .status-icon {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    
    &::before {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      animation: pulse 2s ease-in-out infinite;
    }
  }
  
  &.connected {
    background: rgba(40, 167, 69, 0.1);
    color: var(--success-color);
    border: 1px solid rgba(40, 167, 69, 0.3);
    
    .status-icon::before {
      background: var(--success-color);
    }
  }
  
  &.disconnected {
    background: rgba(220, 53, 69, 0.1);
    color: var(--error-color);
    border: 1px solid rgba(220, 53, 69, 0.3);
    
    .status-icon::before {
      background: var(--error-color);
    }
  }
  
  &.connecting {
    background: rgba(255, 107, 53, 0.1);
    color: var(--warning-color);
    border: 1px solid rgba(255, 107, 53, 0.3);
    
    .status-icon::before {
      background: var(--warning-color);
    }
  }
}

.error-message {
  position: fixed;
  top: 80px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--error-color);
  color: white;
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--border-radius-md);
  box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
  z-index: var(--z-elevated);
  animation: slideInDown 0.3s ease;
  font-weight: 500;
  
  &::before {
    content: '⚠️';
    margin-right: var(--spacing-sm);
  }
}

.game-content {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: auto 1fr;
  grid-template-areas: 
    "board sidebar"
    "rack sidebar";
  gap: var(--spacing-xl);
  align-items: start;
}

.game-left {
  grid-area: board;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.game-right {
  grid-area: sidebar;
  width: 300px;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.game-bottom {
  grid-area: rack;
  display: flex;
  justify-content: center;
}

.game-controls {
  display: flex;
  justify-content: center;
  gap: var(--spacing-md);
  flex-wrap: wrap;
  padding: var(--spacing-md);
  background: var(--surface);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 2px 8px var(--shadow);
  
  .btn {
    min-width: 120px;
    
    &:disabled {
      opacity: 0.5;
      transform: none;
      cursor: not-allowed;
    }
  }
}

.waiting-for-game {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  background: var(--surface);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 4px 16px var(--shadow);
  padding: var(--spacing-xxl);
  text-align: center;
  
  h2 {
    color: var(--text-primary);
    margin-bottom: var(--spacing-lg);
  }
  
  .spinner {
    width: 40px;
    height: 40px;
    border-width: 4px;
    margin-top: var(--spacing-md);
  }
}

// Responsive design
@media (max-width: 1200px) {
  .game-content {
    grid-template-columns: 1fr;
    grid-template-areas: 
      "sidebar"
      "board"
      "rack";
    gap: var(--spacing-lg);
  }
  
  .game-right {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-md);
  }
}

@media (max-width: 768px) {
  .scrabble-game {
    gap: var(--spacing-md);
    padding: 0 var(--spacing-sm);
  }
  
  .connection-status {
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: var(--font-size-xs);
  }
  
  .game-content {
    gap: var(--spacing-md);
  }
  
  .game-right {
    grid-template-columns: 1fr;
  }
  
  .game-controls {
    gap: var(--spacing-sm);
    padding: var(--spacing-sm);
    
    .btn {
      min-width: 100px;
      padding: var(--spacing-xs) var(--spacing-sm);
      font-size: var(--font-size-sm);
    }
  }
  
  .waiting-for-game {
    padding: var(--spacing-xl);
    min-height: 300px;
    
    h2 {
      font-size: var(--font-size-xl);
    }
  }
}

@media (max-width: 480px) {
  .game-controls {
    .btn {
      min-width: 80px;
      font-size: var(--font-size-xs);
    }
  }
  
  .error-message {
    left: var(--spacing-sm);
    right: var(--spacing-sm);
    transform: none;
    padding: var(--spacing-sm);
    font-size: var(--font-size-sm);
  }
}